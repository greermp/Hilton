summary(alcoa[,c('CustomerValueGroup','specbuy','service','pricefle','speed')])
correlations <- cor(alcoa[,c('CustomerValueGroup','specbuy','service','pricefle','speed')])
corrplot(correlations, method="circle")
help(sapply'')
help(sapply)
sapply(alcoa, sd)
confint.default(logit)
logit <- glm(CustomerValueGroup ~ specbuy + service + pricefle + speed, data = alcoa, family = binomial(link="logit"))
summary(logit)
confint.default(logit)
featurePlot(x=xAxis, y=yAxis, plot="density", auto.key = list(columns = 2), scales=scales)
featurePlot(x=xAxis, y=yAxis, plot="box", auto.key = list(columns = 2), scales=scales)
featurePlot(x=xAxis, y=yAxis, plot="density", auto.key = list(columns = 2), scales=scales)
AIC(logit)
exp(confint(myGLM))
AIC(logit)
exp(confint(logit))
exp(coef(logit))
PseudoR2(logit)
??PseudoR2
library(DescTools)
AIC(logit)
exp(confint(logit))
exp(coef(logit))
PseudoR2(logit)
plot(allEffects(logit))
??allEffects
library(BaylorEdPsych)
library(BaylorEdPsych)
plot(allEffects(logit))
library(effects)
plot(allEffects(logit))
plot(allEffects(logit), type = "response")
confusionMatrix(factor(ifelse(predict(logit, type = "response") >= .5, 1, 0)), reference = factor(alcoa$CustomerValueGroup))
anova(logit, test="Chisq")
help(confint.default)
predicted.data <- data.frame(
probability.of.CVG=logistic$fitted.values,
cvg=alcoa$CustomerValueGroup)
predicted.data <- data.frame(
probability.of.CVG=logit$fitted.values,
cvg=alcoa$CustomerValueGroup)
predicted.data <- predicted.data[
order(predicted.data$probability.of.hd, decreasing=FALSE),]
View(predicted.data)
View(predicted.data)
predicted.data$rank <- 1:nrow(predicted.data)
predicted.data <- predicted.data[
order(predicted.data$probability.of.hd, decreasing=FALSE),]
predicted.data$rank <- 1:nrow(predicted.data)
predicted.data <- predicted.data[
order(predicted.data$probability.of.hd, decreasing=FALSE),]
ggplot(data=predicted.data, aes(x=rank, y=probability.of.hd)) +
geom_point(aes(color=hd), alpha=1, shape=4, stroke=2) +
xlab("Index") +
ylab("Predicted probability of getting heart disease")
ggplot(data=predicted.data, aes(x=rank, y=probability.of.hd)) +
geom_point(aes(color=cvg), alpha=1, shape=4, stroke=2) +
xlab("Index") +
ylab("Predicted probability of getting heart disease")
AIC(logit)
ggplot(data=predicted.data, aes(x=rank, y=probability.of.hd)) +
geom_point(aes(color=cvg), alpha=1, shape=4, stroke=2) +
xlab("Index") +
ylab("Predicted probability of getting heart disease")
predicted.data <- data.frame(
probability.of.CVG=logit$fitted.values,
cvg=alcoa$CustomerValueGroup)
predicted.data <- predicted.data[
order(predicted.data$probability.of.CVG, decreasing=FALSE),]
predicted.data$rank <- 1:nrow(predicted.data)
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=cvg), alpha=1, shape=4, stroke=2) +
xlab("Index") +
ylab("Predicted probability of getting heart disease")
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=cvg), alpha=1, shape=2, stroke=2) +
xlab("Index") +
ylab("Predicted probability of getting heart disease")
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=cvg), alpha=1, shape=1, stroke=2) +
xlab("Index") +
ylab("Predicted probability of getting heart disease")
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=cvg), alpha=.6, shape=1, stroke=2) +
xlab("Index") +
ylab("Predicted probability of getting heart disease")
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=cvg), alpha=.6, shape=6, stroke=2) +
xlab("Index") +
ylab("Predicted probability of getting heart disease")
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=cvg), alpha=.6, shape=8, stroke=2) +
xlab("Index") +
ylab("Predicted probability of getting heart disease")
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=cvg), alpha=.7, shape=8, stroke=2) +
xlab("Index") +
ylab("Predicted probability of getting heart disease")
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=cvg), alpha=.7, shape=1, stroke=2) +
xlab("Index") +
ylab("Predicted probability of getting heart disease")
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=cvg), alpha=.7, shape=1, stroke=2) +
xlab("Customer Number (1-100)") +
ylab("Predicted probability of getting heart disease")
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=cvg), alpha=.7, shape=1, stroke=2) +
xlab("Customer Number (1-100)") +
ylab("Predicted probability of Value Group")
predicted.data <- data.frame(
probability.of.CVG=logit$fitted.values,
valGroup=alcoa$CustomerValueGroup)
predicted.data <- predicted.data[
order(predicted.data$probability.of.CVG, decreasing=FALSE),]
predicted.data$rank <- 1:nrow(predicted.data)
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=valGroup), alpha=.7, shape=1, stroke=2) +
xlab("Customer Number (1-100)") +
ylab("Predicted probability of Value Group")
setwd("~/MSBA/MOD3/7208 Customer Analytics/code/7208_6")
alcoa <- read_excel('../data/alcoa.xls', sheet=1)
alcoa <- as.data.frame(alcoa)
alcoa$CustomerValueGroup = factor(alcoa$CustomerValueGroup)
summary(alcoa[,c('CustomerValueGroup','specbuy','service','pricefle','speed')])
correlations <- cor(alcoa[,c('CustomerValueGroup','specbuy','service','pricefle','speed')])
corrplot(correlations, method="circle")
setwd("~/MSBA/MOD3/7208 Customer Analytics/code/7208_6")
alcoa <- read_excel('../data/alcoa.xls', sheet=1)
alcoa <- as.data.frame(alcoa)
alcoa$CustomerValueGroup = factor(alcoa$CustomerValueGroup)
summary(alcoa[,c('CustomerValueGroup','specbuy','service','pricefle','speed')])
correlations <- cor(alcoa[,c('CustomerValueGroup','specbuy','service','pricefle','speed')])
alcoa <- read_excel('../data/alcoa.xls', sheet=1)
alcoa <- as.data.frame(alcoa)
summary(alcoa[,c('CustomerValueGroup','specbuy','service','pricefle','speed')])
correlations <- cor(alcoa[,c('CustomerValueGroup','specbuy','service','pricefle','speed')])
corrplot(correlations, method="circle")
#Summary
AIC(logit)
exp(confint(logit))
exp(coef(logit))
PseudoR2(logit)
plot(allEffects(logit))
plot(allEffects(logit), scales=scales)
plot(allEffects(logit))
plot(allEffects(logit), type = "response")
exp(coef(logit))
# plot(allEffects(logit))
plot(allEffects(logit), type = "response")
confusionMatrix(factor(ifelse(predict(logit, type = "response") >= .5, 1, 0)), reference = factor(alcoa$CustomerValueGroup))
anova(logit, test="Chisq")
PseudoR2(logit)
# plot(allEffects(logit))
plot(allEffects(logit), type = "response")
confusionMatrix(factor(ifelse(predict(logit, type = "response") >= .5, 1, 0)), reference = factor(alcoa$CustomerValueGroup))
library(cowplot)
predicted.data <- data.frame(
probability.of.CVG=logit$fitted.values,
valGroup=alcoa$CustomerValueGroup)
predicted.data <- predicted.data[
order(predicted.data$probability.of.CVG, decreasing=FALSE),]
predicted.data$rank <- 1:nrow(predicted.data)
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=valGroup), alpha=.7, shape=1, stroke=2) +
xlab("Customer Number (1-100)") +
ylab("Predicted probability of Value Group")
library(corrplot)
library(psych)
library(ellipse)
library(caret)
library(readxl)
library(DescTools)
library(effects)
setwd("~/MSBA/MOD3/7208 Customer Analytics/code/7208_6")
# Read data
alcoa <- read_excel('../data/alcoa.xls', sheet=1)
alcoa <- as.data.frame(alcoa)
#Summary
summary(alcoa[,c('CustomerValueGroup','specbuy','service','pricefle','speed')])
# shows no null values
# sapply(alcoa,function(x) sum(is.na(x)))
#Correlation plot
correlations <- cor(alcoa[,c('CustomerValueGroup','specbuy','service','pricefle','speed')])
corrplot(correlations, method="circle")
#Feature plot / EDA
xAxis <- alcoa[,c('specbuy','service','pricefle','speed')]
yAxis <- alcoa[,'CustomerValueGroup']
scales <- list(x=list(relation="free"), y=list(relation="free"))
featurePlot(x=xAxis, y=yAxis, plot="density", auto.key = list(columns = 2), scales=scales)
featurePlot(x=xAxis, y=yAxis, plot="box", auto.key = list(columns = 2), scales=scales)
# Set DV to factor, calculate model
alcoa$CustomerValueGroup = factor(alcoa$CustomerValueGroup)
logit <- glm(CustomerValueGroup ~ specbuy + service + pricefle + speed, data = alcoa, family = binomial(link="logit"))
summary(logit)
#Summary
AIC(logit)
exp(confint(logit))
exp(coef(logit))
PseudoR2(logit)
# plot(allEffects(logit))
plot(allEffects(logit), type = "response")
confusionMatrix(factor(ifelse(predict(logit, type = "response") >= .5, 1, 0)), reference = factor(alcoa$CustomerValueGroup))
anova(logit, test="Chisq")
predicted.data <- data.frame(
probability.of.CVG=logit$fitted.values,
valGroup=alcoa$CustomerValueGroup)
predicted.data <- predicted.data[
order(predicted.data$probability.of.CVG, decreasing=FALSE),]
predicted.data$rank <- 1:nrow(predicted.data)
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=valGroup), alpha=.7, shape=1, stroke=2) +
xlab("Customer Number (1-100)") +
ylab("Predicted probability of Value Group")
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=valGroup), alpha=.7, shape=1, stroke=2) +
xlab("Customer Number (1-100)") +
ylab("Predicted probability of Value Group") + theme_cowplot()
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=valGroup), alpha=.7, shape=1, stroke=2) +
xlab("Customer Number (1-100)") +
ylab("Predicted probability of Value Group") + theme_dark()
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=valGroup), alpha=.7, shape=1, stroke=2) +
xlab("Customer Number (1-100)") +
ylab("Predicted probability of Value Group") + theme_minimal()
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=valGroup), alpha=.7, shape=1, stroke=2) +
xlab("Customer Number (1-100)") +
ylab("Predicted probability of Value Group") + theme_classic()
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=valGroup), alpha=.7, shape=1, stroke=2) +
xlab("Customer Number (1-100)") +
ylab("Predicted probability of Value Group") + theme_minimal()
setwd("~/MSBA/MOD3/7208 Customer Analytics/code/7208_Homework")
library(corrplot)
library(psych)
library(ellipse)
library(caret)
library(readxl)
library(DescTools)
library(effects)
setwd("~/MSBA/MOD3/7208 Customer Analytics/code/7208_Homework")
# Read data
alcoa <- read_excel('../data/alcoa.xls', sheet=1)
# Read data
alcoa <- read_excel('data/alcoa.xls', sheet=1)
alcoa <- as.data.frame(alcoa)
#Summary
summary(alcoa[,c('CustomerValueGroup','specbuy','service','pricefle','speed')])
#Correlation plot
correlations <- cor(alcoa[,c('CustomerValueGroup','specbuy','service','pricefle','speed')])
corrplot(correlations, method="circle")
#Feature plot / EDA
xAxis <- alcoa[,c('specbuy','service','pricefle','speed')]
yAxis <- alcoa[,'CustomerValueGroup']
scales <- list(x=list(relation="free"), y=list(relation="free"))
featurePlot(x=xAxis, y=yAxis, plot="density", auto.key = list(columns = 2), scales=scales)
featurePlot(x=xAxis, y=yAxis, plot="box", auto.key = list(columns = 2), scales=scales)
library(corrplot)
library(psych)
library(ellipse)
library(caret)
library(readxl)
library(DescTools)
library(effects)
setwd("~/MSBA/MOD3/7208 Customer Analytics/code/7208_Homework")
# Read data
alcoa <- read_excel('data/alcoa.xls', sheet=1)
alcoa <- as.data.frame(alcoa)
#Summary
summary(alcoa[,c('CustomerValueGroup','specbuy','service','pricefle','speed')])
#Correlation plot
correlations <- cor(alcoa[,c('CustomerValueGroup','specbuy','service','pricefle','speed')])
corrplot(correlations, method="circle")
# Set DV as factor
alcoa$CustomerValueGroup = factor(alcoa$CustomerValueGroup)
#Feature plot / EDA
xAxis <- alcoa[,c('specbuy','service','pricefle','speed')]
yAxis <- alcoa[,'CustomerValueGroup']
scales <- list(x=list(relation="free"), y=list(relation="free"))
featurePlot(x=xAxis, y=yAxis, plot="density", auto.key = list(columns = 2), scales=scales)
featurePlot(x=xAxis, y=yAxis, plot="box", auto.key = list(columns = 2), scales=scales)
# Set DV to factor, calculate model
logit <- glm(CustomerValueGroup ~ specbuy + service + pricefle + speed, data = alcoa, family = binomial(link="logit"))
summary(logit)
#Summary
AIC(logit)
exp(confint(logit))
exp(coef(logit))
PseudoR2(logit)
# plot(allEffects(logit))
plot(allEffects(logit), type = "response")
confusionMatrix(factor(ifelse(predict(logit, type = "response") >= .5, 1, 0)), reference = factor(alcoa$CustomerValueGroup))
anova(logit, test="Chisq")
predicted.data <- data.frame(
probability.of.CVG=logit$fitted.values,
valGroup=alcoa$CustomerValueGroup)
predicted.data <- predicted.data[
order(predicted.data$probability.of.CVG, decreasing=FALSE),]
predicted.data$rank <- 1:nrow(predicted.data)
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=valGroup), alpha=.7, shape=1, stroke=2) +
xlab("Customer Number (1-100)") +
ylab("Predicted probability of Value Group") + theme_minimal()
library(corrplot)
library(psych)
library(ellipse)
library(caret)
library(readxl)
library(DescTools)
library(effects)
setwd("~/MSBA/MOD3/7208 Customer Analytics/code/7208_Homework")
# Read data
alcoa <- read_excel('data/alcoa.xls', sheet=1)
alcoa <- as.data.frame(alcoa)
#Summary
summary(alcoa[,c('CustomerValueGroup','specbuy','service','pricefle','speed')])
#Correlation plot
correlations <- cor(alcoa[,c('CustomerValueGroup','specbuy','service','pricefle','speed')])
corrplot(correlations, method="circle")
# set DV to factor
alcoa$CustomerValueGroup = factor(alcoa$CustomerValueGroup)
#Feature plot / EDA
xAxis <- alcoa[,c('specbuy','service','pricefle','speed')]
yAxis <- alcoa[,'CustomerValueGroup']
scales <- list(x=list(relation="free"), y=list(relation="free"))
featurePlot(x=xAxis, y=yAxis, plot="density", auto.key = list(columns = 2), scales=scales)
featurePlot(x=xAxis, y=yAxis, plot="box", auto.key = list(columns = 2), scales=scales)
# Calculate model
logit <- glm(CustomerValueGroup ~ specbuy + service + pricefle + speed, data = alcoa, family = binomial(link="logit"))
summary(logit)
#Summary
AIC(logit)
exp(confint(logit))
exp(coef(logit))
#Summary
AIC(logit)
exp(confint(logit))
exp(coef(logit))
PseudoR2(logit)
# plot(allEffects(logit))
plot(allEffects(logit), type = "response")
confusionMatrix(factor(ifelse(predict(logit, type = "response") >= .5, 1, 0)), reference = factor(alcoa$CustomerValueGroup))
anova(logit, test="Chisq")
predicted.data <- data.frame(
probability.of.CVG=logit$fitted.values,
valGroup=alcoa$CustomerValueGroup)
predicted.data <- predicted.data[
order(predicted.data$probability.of.CVG, decreasing=FALSE),]
predicted.data$rank <- 1:nrow(predicted.data)
ggplot(data=predicted.data, aes(x=rank, y=probability.of.CVG)) +
geom_point(aes(color=valGroup), alpha=.7, shape=1, stroke=2) +
xlab("Customer Number (1-100)") +
ylab("Predicted probability of Value Group") + theme_minimal()
setwd("~/")
cwd()
getwd()
setwd("~/MSBA/MOD3/Hilton")
setwd("~/MSBA/MOD3/Hilton")
library(dplyr)
library(readxl)
library(ggthemes)
## app.R ##
library(shiny)
library(shinydashboard)
library(tidyr)
library(ggplot2)
library(dplyr)
library(readxl)
library(ggthemes)
library(rsconnect)
library(ggpointdensity)
library(ggscatter)
library(hrbrthemes)
library(viridis)
library(ggpmisc)
library(tidyr)
library(plyr)
library(dplyr)
library(ggmap)
library(ggpubr)
library(ggExtra)
setwd("~/MSBA/MOD3/Hilton")
HiltonUS <- read_excel("HiltonUSEmployeeDataAll.xlsx")
HotelData <- read_excel('HiltonUSTotalHotelLevelData.xlsx')
ggplotRegression <- function (fit, lineCol) {
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point(shape=21, color="#273443", fill="#1EBEA5", position = 'jitter') +
stat_smooth(method = "lm", col = lineCol,) +
labs(caption =  paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5))) + theme_classic2()
}
ggplotRobustRegression <- function (fit, lineCol) {
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point(shape=21, color="#273443", fill="#1EBEA5", position = 'jitter') +
stat_smooth(method = "rlm", col = lineCol,) +
labs(caption =  paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5))) + theme_classic2()
}
ggplot(data = HotelData) +
geom_bar(aes(x = HotelBrand))
nrow(filter(HotelData, HotelBrand == 10))
str(HotelData)
str(HiltonUS)
levels= c('HotelA','HotelB','HotelC','HotelD','HotelE',
'HotelF','HotelG','HotelH','HotelI','HotelJ','HotelK')
HiltonUS$HotelName <- factor(HiltonUS$HotelBrand, labels = levels)
# Perceptual IVs (5-point composite scales):
#    WorkLifeBalance
#  Communication
#  RewardsBenefits
#  LearningDevelopment
#  Voice
#  TeamWork
#  WorkEnvironment
# Perceptual DVs (5 point scales or dichotomous converted):
#    Engagement
#  RecommendToWork
#  RecommendToStay
#  JobSatisfaction
#  PaySatisfaction
#  IntentToStayFivePoint
#  IntentToStayDichotomous
ggscatter(HiltonUS, x="WorkLifeBalance", y="JobSatisfaction", color="lightgray")  + geom_density_2d() +stat_density_2d(aes(fill=..level..), geom="polygon")+  gradient_fill("YlOrRd")
ggscatter(HiltonUS, x="RewardsBenefits", y="JobSatisfaction", color="lightgray")  + stat_density_2d(aes(fill=..level..), geom="polygon")+  gradient_fill("YlOrRd")
ggscatter(HiltonUS, x="WorkEnvironment", y="JobSatisfaction", color="lightgray")  + geom_density_2d() +stat_density_2d(aes(fill=..level..), geom="polygon")+  gradient_fill("YlOrRd")
jsf_model = lm(JobSatisfaction ~ WorkLifeBalance + RewardsBenefits + WorkEnvironment, data = HiltonUS)
coef(jsf_model)
summary(jsf_model)
# ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "JobSatisfaction", y = "WorkLifeBalance",
#              color = "HotelName",size = , position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + geom_density2d() + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "WorkLifeBalance", y = "JobSatisfaction",
color = "HotelName",size = .5, position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "RewardsBenefits", y = "JobSatisfaction",
color = "HotelName",size = .5, position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "WorkEnvironment", y = "JobSatisfaction",
color = "HotelName",size = .5, position = 'jitter', title="Hotel A Environment V Satisfaction", mean.point = TRUE) + theme_classic()
ggplot(HiltonUS, aes(x = "WorkLifeBalance", y = "JobSatisfaction")) +
geom_hex(bins=30) +
scale_fill_viridis_c() +
geom_point(shape = '.', col = 'white')
# palette = c("#00AFBB", "#E7B800", "#FC4E07")
ggplot(filter(HiltonUS,HotelName=='HotelA'), aes(x=WorkLifeBalance, y=JobSatisfaction)) + geom_pointdensity() + scale_color_viridis_c() + geom_jitter()
HiltonUS %>%
ggplot(aes(factor(FullTimePartTime), IntentToStayFivePoint)) +
geom_boxplot()
ggplot(HiltonUS, aes(factor(WorkEnviron5), IntentToStayFivePoint)) +
geom_violin()
ggplot(HiltonUS, aes(factor(MgtTrust), IntentToStayFivePoint, color=factor(MgtTrust))) +
geom_violin()
# Perceptual IVs (5-point composite scales):
#    WorkLifeBalance
#  Communication
#  RewardsBenefits
#  LearningDevelopment
#  Voice
#  TeamWork
#  WorkEnvironment
HiltonUS %>% sample_frac(.01) %>%
ggplot(aes(x=WorkLifeBalance, y= WorkEnvironment, color=IntentToStayDichotomous)) +
geom_point(alpha=.9) + geom_jitter()
HiltonUS %>% sample_frac(.01) %>%
ggplot(aes(x=Communication, y= Voice, color=IntentToStayDichotomous)) +
geom_point(alpha=.1) + geom_jitter()
HiltonUS %>% sample_frac(.01) %>%
ggplot(aes(x=RewardsBenefits, y= IntentToStayFivePoint)) +
geom_point(alpha=.9) + geom_jitter()
ggplot(HiltonUS, aes(factor(RewardsBenefits), IntentToStayFivePoint)) +
geom_boxplot()
ggplot(HiltonUS, aes(factor(WorkEnvironment), IntentToStayFivePoint)) +
geom_boxplot()
ggplot(HiltonUS, aes(WorkEnvironment, IntentToStayFivePoint))+geom_hex(binwidth = c(2, 2))
ggplot(HiltonUS, aes(WorkEnvironment, IntentToStayFivePoint))+stat_binhex(binwidth = c(2, 2))
ggplot(HiltonUS, aes(WorkEnvironment, IntentToStayFivePoint)) +
stat_density_2d(aes(fill = stat(density)), geom = 'raster', contour = FALSE) +
scale_fill_viridis_c() +
coord_cartesian(expand = FALSE)
ggplot(HiltonUS, aes(WorkEnvironment, IntentToStayFivePoint)) +
geom_point(colour="blue", alpha=0.9) +
geom_density2d(colour="black")
ggplot(HiltonUS, aes(WorkEnvironment, IntentToStayFivePoint)) +geom_jitter()+ geom_pointdensity() + scale_color_viridis_c()
ggplot(HiltonUS, aes(WorkEnvironment, RewardsBenefits, fill=IntentToStayFivePoint)) +geom_tile()+  scale_fill_gradient(low="red", high="blue") +  theme_ipsum()
ggplot(HiltonUS, aes(WorkEnvironment, RewardsBenefits, fill=IntentToStayFivePoint)) +geom_tile()+  scale_fill_viridis() +  theme_ipsum()
ggplot(HiltonUS, aes(WorkEnvironment, RewardsBenefits, fill=IntentToStayFivePoint)) +geom_tile()+    scale_fill_distiller(palette = "RdPu") +  theme_ipsum()
ggplot(HiltonUS, aes(WorkEnvironment, RewardsBenefits, fill=IntentToStayDichotomous)) +geom_tile()+    scale_fill_distiller(palette = "RdPu") +  theme_ipsum()+
geom_density2d()
ggplot(HiltonUS, aes(WorkEnvironment, RewardsBenefits)) +
stat_density2d(aes(fill = stat(level)), geom="polygon") +
scale_fill_viridis_c(option = "plasma") +
theme(legend.position = "magma")
ggplot(HiltonUS, aes(WorkEnvironment, RewardsBenefits)) + geom_point(alpha=.005)+geom_jitter() + geom_density_2d_filled(alpha = 0.7, contour_var = 'ndensity') + facet_wrap(vars(IntentToStayFivePoint))
ggplot(HiltonUS, aes(WorkEnvironment, RewardsBenefits)) + geom_density_2d_filled( alpha = 0.5, contour_var = 'ndensity')+ facet_wrap(vars(IntentToStayDichotomous))
ggplot(HiltonUS, aes(WorkEnvironment, RewardsBenefits))+ geom_density_2d_filled(alpha = 0.9, contour_var = 'ndensity') + facet_wrap(vars(IntentToStayFivePoint))
ggplot(HiltonUS, aes(x=WorkLifeBalance, y=JobSatisfaction))+ geom_density_2d_filled(alpha = 0.9, contour_var = 'ndensity') + facet_wrap(vars(IntentToStayFivePoint))
ggplot(HiltonUS, aes(x=Voice, y=Communication))+ geom_density_2d_filled(alpha = 0.9, contour_var = 'ndensity') + facet_wrap(vars(IntentToStayFivePoint))
ggplot(HiltonUS, aes(x=Teamwork, y=LearningDevelopment))+ geom_density_2d_filled(alpha = 0.7, contour_var = 'ndensity') + facet_wrap(vars(IntentToStayFivePoint))
ggplot(HiltonUS, aes(x=Teamwork, y=LearningDevelopment)) + stat_density_2d(geom = "point", aes(size = after_stat(density)), n = 75, contour = FALSE)
ggplot(HiltonUS, aes(x=Teamwork, y=LearningDevelopment)) + stat_density_2d(geom = "point", aes(size = after_stat(density)), n = 5, contour = FALSE)+ facet_wrap(vars(IntentToStayDichotomous))
# ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "JobSatisfaction", y = "WorkLifeBalance",
#              color = "HotelName",size = , position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + geom_density2d() + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "WorkLifeBalance", y = "JobSatisfaction",
color = "HotelName",size = .5, position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + theme_classic()
ggplot(HiltonUS, aes(x=Teamwork, y=LearningDevelopment)) + stat_density_2d(geom = "point", aes(size = after_stat(density)), n = 5, contour = FALSE)+ facet_wrap(vars(IntentToStayDichotomous))
ggplot(HiltonUS, aes(x=Teamwork, y=LearningDevelopment))+ geom_density_2d_filled(alpha = 0.7, contour_var = 'ndensity') + facet_wrap(vars(IntentToStayFivePoint))
