profitability$unitPrice[profitability$Size == '6oz'& profitability$Year<2008] <- 16
profitability$unitPrice[profitability$Size == '5oz'] <- 26.40
profitability$unitPrice[profitability$Size == '1.5oz'] <- 22
#Without discount
# profitability$profit = (profitability$sum * profitability$unitPrice) - (profitability$sum*profitability$caseCost )
profitability$income = (profitability$sum/2 * profitability$unitPrice) - (profitability$sum/2*profitability$caseCost ) + (profitability$sum/2 * profitability$unitPrice*.75) - (profitability$sum/2*profitability$caseCost )
ggplot(profitability, aes(x=Year, y=income, fill=Chip)) +
geom_col(alpha=.7) +  theme(legend.position="bottom" ,plot.title = element_text(size=15, face="bold")) +
theme_pubclean() + labs(title = "Income", size=20) +# labs(y="Units Sold", x="")+
scale_y_continuous(labels = scales::number_format(big.mark = ',', prefix = '$')) + labs(x="")
profitability %>%
group_by(Year) %>%
summarise(total=sum(income)) %>%
ggplot( aes(x=Year, y=total)) +
geom_col(alpha=.7, fill="chocolate3") +  theme(legend.position="bottom" ,plot.title = element_text(size=15, face="bold")) +
geom_text(aes(x = Year, y = total, label =  paste0('$ ', as.character(formatC(as.numeric(total), format="f", digits=0, big.mark=","))), vjust=-.5)) +
theme_pubclean() + labs(title = "Income", size=20) +# labs(y="Units Sold", x="")+
scale_y_continuous(labels = scales::number_format(big.mark = ',', prefix = '$')) + labs(x="")
profitability1 = profitability %>%
group_by(Year) %>%
summarise(Profit=sum(income)-1000000)
profitability2 <- profitability1 %>%
mutate(pos = Profit >= 0)
profitability2 <- profitability2  %>% mutate(cumulativeProfit = cumsum(Profit))
profitability2 <-profitability2 %>%
mutate(label = if_else(Year==2010, paste0('Cumulative Profit\n', '$', as.character(formatC(as.numeric(cumulativeProfit), format="f", digits=0, big.mark=","))), NA_character_))
ggplot(profitability2, aes(x=Year, y=Profit, fill=pos)) +
geom_col(alpha=.7, position="identity") +  theme(legend.position="bottom" ,plot.title = element_text(size=15, face="bold")) +  theme_pubclean() + labs(title = "Rte 11 Profit") +
scale_y_continuous(name='Net Profit',breaks=seq(-800000, 200000, 200000), limits = c(-900000,200000), labels = scales::number_format(big.mark = ',', prefix = '$ ')) + labs(x="") +
geom_text(aes(x = Year, y = Profit, label =  paste0('$ ', as.character(formatC(as.numeric(Profit), format="f", digits=0, big.mark=","))), vjust=-.5)) +
scale_fill_manual(values = c("red", "dark green"), guide=FALSE) +
stat_smooth(geom='line',alpha=.4,data = profitability2, mapping=aes(x=Year, y=cumulativeProfit, group=1),alpha=.8,size=2, color='blue') +
geom_label_repel(data = profitability2, aes(x=Year, y=cumulativeProfit, label = label),color='blue', fill="grey",nudge_x = -.8,na.rm = TRUE)
## INCOME PER CHIP???
perchipsold = raw_df %>%
group_by(Chip, Year) %>%
summarise(sum=mean(sum(Chips.Sold)))
perchipsold %>%
mutate(Chip = fct_reorder(Chip, sum)) %>%
ggplot(aes(x=Chip, y=sum, fill=Year)) +
geom_col(alpha=.7) +  theme(legend.position="bottom" ,plot.title = element_text(size=15, face="bold")) +
theme_pubclean() + labs(title = "Income before Operating Cost", size=20) +# labs(y="Units Sold", x="")+
scale_y_continuous(labels = scales::number_format(big.mark = ',', prefix = '$')) + labs(x="") + theme(axis.text.x = element_text(angle=45,hjust=1, vjust=.9))
perchip = raw_df %>%
group_by(Chip,Size) %>%
summarise(sum=mean(sum(Chips.Sold)))
perchip= filter(perchip,sum>0)
perchip$caseCost = NA
perchip$unitPrice = NA
perchip$caseCost[perchip$Size == '2oz'] <- .36*30
perchip$caseCost[perchip$Size == '6oz'] <- .81*12
perchip$caseCost[perchip$Size == '1.5oz'] <- .36*30
perchip$caseCost[perchip$Size == '5oz'] <- .81*12
perchip$unitPrice[perchip$Size == '2oz'] <- 20
perchip$unitPrice[perchip$Size == '6oz'] <- 18
perchip$unitPrice[perchip$Size == '2oz' & perchip$Year<2008] <- 18
perchip$unitPrice[perchip$Size == '6oz'& perchip$Year<2008] <- 16
perchip$unitPrice[perchip$Size == '5oz'] <- 26.40
perchip$unitPrice[perchip$Size == '1.5oz'] <- 22
perchip$income = (perchip$sum/2 * perchip$unitPrice) - (perchip$sum/2*perchip$caseCost ) + (perchip$sum/2 * perchip$unitPrice*.75) - (perchip$sum/2*perchip$caseCost )
test=perchip
perchip1 = perchip %>%
group_by(Chip) %>%
summarise(metric=sum(income, total=sum(sum)))
test = test %>%
group_by(Chip) %>%
summarise( metric=sum(sum))
# combined=cbind(perchip1,test$total)
test$label='Total Sold'
perchip1$label='Income'
combined=rbind(perchip1,test)
# ggplot(combined, aes(reorder(Chip,-Income), Chip)) +
#   geom_col(alpha=.7) +  theme(legend.position="bottom" ,plot.title = element_text(size=15, face="bold")) +
#   theme_pubclean() + labs(title = "Cases Sold By Flavor") + labs(y="Cases Sold", x="")+
#   scale_y_continuous(labels = scales::number_format(big.mark = ',')) + theme(axis.text.x = element_text(angle=45,hjust=1, vjust=.9))
combined %>%
mutate(Chip = fct_reorder(Chip, desc(metric))) %>%
ggplot(aes(x=Chip, y=metric,fill=label)) +
geom_col(alpha=.7, position='dodge') +  theme(legend.position="bottom" ,plot.title = element_text(size=15, face="bold")) +
theme_pubclean() + labs(title = "Income by chip ('06-'10)", size=20) +# labs(y="Units Sold", x="")+
scale_y_continuous(labels = scales::number_format(big.mark = ',', prefix = '$')) + labs(x="") + theme(axis.text.x = element_text(angle=45,hjust=1, vjust=.9))+ theme(legend.title = element_blank())
# ggplot(combined, aes(x=Chip, y=metric,fill=label)) +
#   geom_col(alpha=.7, position='dodge') +  theme(legend.position="bottom" ,plot.title = element_text(size=15, face="bold")) +
#   theme_pubclean() + labs(title = "Income by chip ('06-'10)", size=20) +# labs(y="Units Sold", x="")+
#   scale_y_continuous(labels = scales::number_format(big.mark = ',', prefix = '$')) + labs(x="") + theme(axis.text.x = element_text(angle=45,hjust=1, vjust=.9))
library(psych)
library(foreign)
library(DBI)
library(readxl)
library(haven)
library(car)
library(effects)
library(corrplot)
library(BaylorEdPsych)
library(ggfortify)
library(cluster)
library(klaR)
library(rrcov)
library(gmodels)
library(QuantPsyc)
library(caret)
library(sjstats)
library(lm.beta)
library(DescTools)
dat.Eretail <-  read_xls("data/Eretail7040.xls", sheet=1)
setwd("~/MSBA/MOD3/Hilton")
## app.R ##
library(shiny)
library(shinydashboard)
library(tidyr)
library(ggplot2)
library(dplyr)
library(readxl)
library(ggthemes)
library(rsconnect)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
my_data <- read_excel("HiltonUSEmployeeDataAll.xlsx", sheet = "df")
my_data <- read_excel("HiltonUSEmployeeDataAll.xlsx")
View(my_data)
View(my_data)
HiltonUS <- read_excel("HiltonUSEmployeeDataAll.xlsx")
HotelData <- read_excel('HiltonUSTotalHotelLevelData.xlsx')
#Dashboard header carrying the title of the dashboard
header <- dashboardHeader(title = "Hitlon Decision Analysis")
View(HotelData)
View(HotelData)
View(HiltonUS)
View(HiltonUS)
View(HotelData)
View(HotelData)
# menuItem("Geographic Survey Results", icon = icon("send",lib='glyphicon'),
#          href = "https://rpubs.com/greermp/Regard_by_location")
# menuItem("Geographic Survey Results", icon = icon("send",lib='glyphicon'),
#          href = "https://rpubs.com/greermp/Regard_by_location")
frow1 <- fluidRow(
valueBoxOutput("value1")
,valueBoxOutput("value2")
,valueBoxOutput("value3")
)
frow2 <- fluidRow(
box(
title = "Oculus Return on Investment with and without Advertising Revenue"
,status = "primary"
,solidHeader = TRUE
,collapsible = TRUE
,plotOutput("two_L", height = "300px")
)
,box(
title = "Units Sold"
,status = "primary"
,solidHeader = TRUE
,collapsible = TRUE
,plotOutput("two_R", height = "300px")
)
)
frow3 <- fluidRow(
box(
title = "Revenues - Units and Software Store"
,status = "primary"
,solidHeader = TRUE
,collapsible = TRUE
,plotOutput("three_L", height = "300px")
)
,box(
title = "Investment in R&D, Acquistions, and P&E"
,status = "primary"
,solidHeader = TRUE
,collapsible = TRUE
,plotOutput("three_R", height = "300px")
)
)
# combine the two fluid rows to make the body
body <- dashboardBody(frow1, frow2, frow3)
#completing the ui part with dashboardPage
ui <- dashboardPage(title = 'This is my Page title', header, sidebar, body, skin='blue')
#Sidebar content of the dashboard
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
# menuItem("Geographic Survey Results", icon = icon("send",lib='glyphicon'),
#          href = "https://rpubs.com/greermp/Regard_by_location")
)
)
#Dashboard header carrying the title of the dashboard
header <- dashboardHeader(title = "Hitlon Decision Analysis")
#Sidebar content of the dashboard
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
# menuItem("Geographic Survey Results", icon = icon("send",lib='glyphicon'),
#          href = "https://rpubs.com/greermp/Regard_by_location")
)
)
#Sidebar content of the dashboard
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")))
# menuItem("Geographic Survey Results", icon = icon("send",lib='glyphicon'),
#          href = "https://rpubs.com/greermp/Regard_by_location")
)
#Sidebar content of the dashboard
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")))
# menuItem("Geographic Survey Results", icon = icon("send",lib='glyphicon'),
#          href = "https://rpubs.com/greermp/Regard_by_location")
)
#Sidebar content of the dashboard
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")))
# menuItem("Geographic Survey Results", icon = icon("send",lib='glyphicon'),
#          href = "https://rpubs.com/greermp/Regard_by_location")
)
#Sidebar content of the dashboard
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")))
# menuItem("Geographic Survey Results", icon = icon("send",lib='glyphicon'),
#          href = "https://rpubs.com/greermp/Regard_by_location")
)
#Sidebar content of the dashboard
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")))
# menuItem("Geographic Survey Results", icon = icon("send",lib='glyphicon'),
#          href = "https://rpubs.com/greermp/Regard_by_location")
)
#Sidebar content of the dashboard
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")))
# menuItem("Geographic Survey Results", icon = icon("send",lib='glyphicon'),
#          href = "https://rpubs.com/greermp/Regard_by_location")
)
#Sidebar content of the dashboard
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard"))))
frow1 <- fluidRow(
valueBoxOutput("value1")
,valueBoxOutput("value2")
,valueBoxOutput("value3")
)
frow2 <- fluidRow(
box(
title = "Oculus Return on Investment with and without Advertising Revenue"
,status = "primary"
,solidHeader = TRUE
,collapsible = TRUE
,plotOutput("two_L", height = "300px")
)
,box(
title = "Units Sold"
,status = "primary"
,solidHeader = TRUE
,collapsible = TRUE
,plotOutput("two_R", height = "300px")
)
)
frow3 <- fluidRow(
box(
title = "Revenues - Units and Software Store"
,status = "primary"
,solidHeader = TRUE
,collapsible = TRUE
,plotOutput("three_L", height = "300px")
)
,box(
title = "Investment in R&D, Acquistions, and P&E"
,status = "primary"
,solidHeader = TRUE
,collapsible = TRUE
,plotOutput("three_R", height = "300px")
)
)
# combine the two fluid rows to make the body
body <- dashboardBody(frow1, frow2, frow3)
#completing the ui part with dashboardPage
ui <- dashboardPage(title = 'This is my Page title', header, sidebar, body, skin='blue')
my_data <- read_excel("OculusData_v5_dash.xlsx", sheet = "df")
## app.R ##
library(shiny)
library(shinydashboard)
library(tidyr)
library(ggplot2)
library(dplyr)
library(readxl)
library(ggthemes)
library(rsconnect)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
HiltonUS <- read_excel("HiltonUSEmployeeDataAll.xlsx")
HotelData <- read_excel('HiltonUSTotalHotelLevelData.xlsx')
HiltonUS.head()
HiltonUS
HiltonUS.head
HiltonUS.head()
type(HiltonUS)
(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
## app.R ##
library(shiny)
library(shinydashboard)
library(tidyr)
library(ggplot2)
library(dplyr)
library(readxl)
library(ggthemes)
library(rsconnect)
HiltonUS <- read_excel("HiltonUSEmployeeDataAll.xlsx")
HotelData <- read_excel('HiltonUSTotalHotelLevelData.xlsx')
HiltonUS.head
HiltonUS.head()
HiltonUS.head()
library(ggpmisc)
library(tidyr)
library(plyr)
library(dplyr)
library(ggmap)
library(ggpubr)
library(ggExtra)
# raw_df <- read.csv('fb_anova.csv')
raw_df <- read.csv('new.csv')
tidy_df <- read.csv('new_tidy.csv')
most_tidy <- read.csv('most_tidy.csv')
ggplotRegression <- function (fit, lineCol) {
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point(shape=21, color="#273443", fill="#1EBEA5", position = 'jitter') +
stat_smooth(method = "lm", col = lineCol,) +
labs(caption =  paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5))) + theme_classic2()
}
ggplotRobustRegression <- function (fit, lineCol) {
require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point(shape=21, color="#273443", fill="#1EBEA5", position = 'jitter') +
stat_smooth(method = "rlm", col = lineCol,) +
labs(caption =  paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5))) + theme_classic2()
}
ggplot(data = HotelData) +
geom_bar(aes(x = HotelBrand))
nrow(filter(HotelData, HotelBrand == 10))
str(HotelData)
str(HiltonUS)
jsf_model = lm(JobSatisfaction ~ WorkLifeBalance + RewardsBenefits + WorkEnvironment, data = HiltonUS)
coef(jsf_model)
summary(jsf_model)
jsf_model = lm(JobSatisfaction ~ WorkLifeBalance * RewardsBenefits, data = HiltonUS)
coef(jsf_model)
ggplot(radial,aes(y=JobSatisfaction,x=WorkLifeBalance,color=factor(RewardsBenefits)))+geom_point()+stat_smooth(method="lm",se=FALSE)
# Perceptual DVs (5 point scales or dichotomous converted):
#   • Engagement
# • RecommendToWork
# • RecommendToStay
# • JobSatisfaction
# • PaySatisfaction
# • IntentToStayFivePoint
# • IntentToStayDichotomous
require(ggiraph)
require(ggiraphExtra)
require(plyr)
install.packages(ggiraphExtra)
# Perceptual DVs (5 point scales or dichotomous converted):
#   • Engagement
# • RecommendToWork
# • RecommendToStay
# • JobSatisfaction
# • PaySatisfaction
# • IntentToStayFivePoint
# • IntentToStayDichotomous
install.packages(ggiraph)
+
RewardsBenefits
jsf_model = lm(JobSatisfaction ~ WorkLifeBalance + RewardsBenefits + WorkEnvironment, data = HiltonUS)
coef(jsf_model)
coef(jsf_model)
summary(jsf_model)
ggscatter(HiltonUS, x="WorkLifeBalance", y="JobSatisfaction", color="lightgray")  + geom_density_2d() +stat_density_2d(aes(fill=..level..), geom="polygon")+  gradient_fill("YlOrRd")
HiltonUS
HiltonUS
ggscatter(HiltonUS, x="WorkLifeBalance", y="JobSatisfaction", color="lightgray")  + geom_density_2d() +stat_density_2d(aes(fill=..level..), geom="polygon")+  gradient_fill("YlOrRd")
ggscatter(HiltonUS, x="RewardsBenefits", y="JobSatisfaction", color="lightgray")  + geom_density_2d() +stat_density_2d(aes(fill=..level..), geom="polygon")+  gradient_fill("YlOrRd")
ggscatter(HiltonUS, x = "JobSatisfaction", y = "WorkLifeBalance",
color = "HotelnnCode", shape = "HotelnnCode", position = 'jitter', title="Facebook Regard v Privacy",
palette = c("#00AFBB", "#E7B800", "#FC4E07"), mean.point = TRUE) + geom_density2d() + theme_classic()
ggscatter(HiltonUS, x = "JobSatisfaction", y = "WorkLifeBalance",
color = "HotellnnCode", shape = "HotellnnCode", position = 'jitter', title="Facebook Regard v Privacy",
palette = c("#00AFBB", "#E7B800", "#FC4E07"), mean.point = TRUE) + geom_density2d() + theme_classic()
ggscatter(HiltonUS, x = "JobSatisfaction", y = "WorkLifeBalance",
color = "HotelBrand", shape = "HotelBrand", position = 'jitter', title="Facebook Regard v Privacy",
palette = c("#00AFBB", "#E7B800", "#FC4E07"), mean.point = TRUE) + geom_density2d() + theme_classic()
levels= c('one','one','one','one','one','one','one','one','one')
factor(HiltonUS$HotelBrand, labels = levels)
levels= c('HotelA','HotelA','HotelA','HotelA','HotelA',
'HotelA','HotelA','HotelA','HotelA','HotelA','HotelA')
levels= c('HotelA','HotelB','HotelC','HotelD','HotelE',
'HotelF','HotelG','HotelH','HotelI','HotelJ','HotelK')
factor(HiltonUS$HotelBrand, labels = levels)
ggscatter(HiltonUS, x = "JobSatisfaction", y = "WorkLifeBalance",
color = "HotelBrand", shape = "HotelBrand", position = 'jitter', title="Facebook Regard v Privacy",
palette = c("#00AFBB", "#E7B800", "#FC4E07"), mean.point = TRUE) + geom_density2d() + theme_classic()
HiltonUS$HotelName <- factor(HiltonUS$HotelBrand, labels = levels)
ggscatter(HiltonUS, x = "JobSatisfaction", y = "WorkLifeBalance",
color = "HotelName", shape = "HotelName", position = 'jitter', title="Facebook Regard v Privacy",
palette = c("#00AFBB", "#E7B800", "#FC4E07"), mean.point = TRUE) + geom_density2d() + theme_classic()
ggscatter(HiltonUS, x = "JobSatisfaction", y = "WorkLifeBalance",
color = "HotelName", shape = "HotelName", position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + geom_density2d() + theme_classic()
ggscatter(HiltonUS, x = "JobSatisfaction", y = "WorkLifeBalance",
color = "HotelName", shape = "HotelName",  title="Facebook Regard v Privacy", mean.point = TRUE) + geom_density2d() + theme_classic()
ggscatter(HiltonUS, x = "JobSatisfaction", y = "WorkLifeBalance",
color = "HotelName",  title="Facebook Regard v Privacy", mean.point = TRUE) + geom_density2d() + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "JobSatisfaction", y = "WorkLifeBalance",
color = "HotelName", position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + geom_density2d() + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "JobSatisfaction", y = "WorkLifeBalance",
color = "HotelName", position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "JobSatisfaction", y = "WorkLifeBalance",
color = "HotelName", title="Facebook Regard v Privacy", mean.point = TRUE) + geom_density2d() + theme_classic()
, position = 'jitter'
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "JobSatisfaction", y = "WorkLifeBalance",
color = "HotelName", position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + geom_density2d() + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "JobSatisfaction", y = "WorkLifeBalance",
color = "HotelName",size = 1, position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + geom_density2d() + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "JobSatisfaction", y = "WorkLifeBalance",
color = "HotelName",size = .5, position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + geom_density2d() + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "JobSatisfaction", y = "WorkLifeBalance",
color = "HotelName",size = .5, position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "WorkLifeBalance", y = "JobSatisfaction",
color = "HotelName",size = .5, position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "RewardsBenefits", y = "JobSatisfaction",
color = "HotelName",size = .5, position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "WorkEnvironment", y = "JobSatisfaction",
color = "HotelName",size = .5, position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "WorkEnvironment", y = "JobSatisfaction",
color = "HotelName",size = .5, position = 'jitter', title="Hotel A Environment V Satisfaction", mean.point = TRUE) + theme_classic()
# ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "JobSatisfaction", y = "WorkLifeBalance",
#              color = "HotelName",size = , position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + geom_density2d() + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "WorkLifeBalance", y = "JobSatisfaction",
color = "HotelName",size = .5, title="Facebook Regard v Privacy", mean.point = TRUE) + theme_classic() + geom_density2d()
# ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "JobSatisfaction", y = "WorkLifeBalance",
#              color = "HotelName",size = , position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + geom_density2d() + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "WorkLifeBalance", y = "JobSatisfaction",
color = "HotelName",size = .5, position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "RewardsBenefits", y = "JobSatisfaction",
color = "HotelName",size = .5, position = 'jitter', title="Facebook Regard v Privacy", mean.point = TRUE) + theme_classic()
ggscatter(filter(HiltonUS,HotelName=='HotelA'), x = "WorkEnvironment", y = "JobSatisfaction",
color = "HotelName",size = .5, position = 'jitter', title="Hotel A Environment V Satisfaction", mean.point = TRUE) + theme_classic()
ggplot(HiltonUS,aes(x = "WorkLifeBalance", y = "JobSatisfaction")) + stat_binhex()
ggplot(df, aes(x = "WorkLifeBalance", y = "JobSatisfaction")) +
geom_hex() +
scale_fill_viridis_c() +
geom_point(shape = '.', col = 'white')
ggplot(df, aes(x = "WorkLifeBalance", y = "JobSatisfaction")) +
geom_hex() +
scale_fill_viridis_c() +
geom_point(shape = '.', col = 'white')
ggplot(df, aes(x = "WorkLifeBalance", y = "JobSatisfaction")) +
geom_hex() +
scale_fill_viridis_c() +
geom_point(shape = '.', col = 'white')
ggplot(df, aes(WorkLifeBalance, JobSatisfaction)) +
geom_hex() +
scale_fill_viridis_c() +
geom_point(shape = '.', col = 'white')
ggplot(df, aes(x = "WorkLifeBalance", y = "JobSatisfaction")) +
geom_hex()
ggplot(HiltonUS, aes(x = "WorkLifeBalance", y = "JobSatisfaction")) +
geom_hex() +
scale_fill_viridis_c() +
geom_point(shape = '.', col = 'white')
help(geom_hex)
ggplot(HiltonUS, aes(x = "WorkLifeBalance", y = "JobSatisfaction")) +
geom_hex(bins=30) +
scale_fill_viridis_c() +
geom_point(shape = '.', col = 'white')
ggplot(HiltonUS, aes(x = "WorkLifeBalance", y = "JobSatisfaction")) +
geom_hex(bins=30) +
scale_fill_viridis_c()
ggplot(HiltonUS, aes(x = "WorkLifeBalance", y = "JobSatisfaction")) +
geom_hex(bins=30)
library(ggpointdensity)
install.packages(ggpointdensity)
install.packages("ggpointdensity")
ggplot(HiltonUS, aes(x=WorkLifeBalance, y=JobSatisfaction)) + geom_pointdensity() + scale_color_viridis_c()
library(ggpointdensity)
ggplot(HiltonUS, aes(x=WorkLifeBalance, y=JobSatisfaction)) + geom_pointdensity() + scale_color_viridis_c()
ggplot(HiltonUS, aes(x=WorkLifeBalance, y=JobSatisfaction)) + geom_pointdensity() + scale_color_viridis_c() + geom_jitter()
ggplot(filter(HiltonUS,HotelName=='HotelA', aes(x=WorkLifeBalance, y=JobSatisfaction)) + geom_pointdensity() + scale_color_viridis_c() + geom_jitter()
ggplot(filter(HiltonUS,HotelName=='HotelA'), aes(x=WorkLifeBalance, y=JobSatisfaction)) + geom_pointdensity() + scale_color_viridis_c() + geom_jitter()
ggplot(filter(HiltonUS,HotelName=='HotelA'), aes(x=WorkLifeBalance, y=JobSatisfaction)) + geom_pointdensity() + scale_color_viridis_c() + geom_jitter()
help(geom_pointdensity)
## Map densities to colors
cols <-  colorRampPalette(c("#000099", "#00FEFF", "#45FE4F",
"#FCFF00", "#FF9400", "#FF3100"))(256)
## Use densCols() output to get density at each point
x <- densCols(x1,x2, colramp=colorRampPalette(c("black", "white")))
